{"version":3,"sources":["Components/CustomCheckBox.tsx","Components/TodoItem.tsx","Components/TodoList.tsx","Models/TodoModel.ts","Components/TodoEntry.tsx","Components/Todo.tsx","App.tsx","Services/LocalStorageService.ts","index.tsx"],"names":["CustomCheckBox","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","uniqueId","Math","random","inherits","createClass","key","value","state","onChanged","_this2","checked","react_default","a","createElement","className","id","type","onChange","e","currentTarget","htmlFor","Component","TodoItem","item","newState","setState","updateStore","CustomCheckBox_CustomCheckBox","done","assign","title","onClick","deleteItem","TodoList","data","ind","indexOf","splice","map","index","TodoItem_TodoItem","bind","TodoModel","TodoEntry","apply","arguments","ref","placeholder","val","refs","inp","newItem","onAdd","Todo","TodoEntry_TodoEntry","push","forceUpdate","TodoList_TodoList","storage","LocalStorageService","storageKey","d","JSON","parse","localStorage","getItem","length","stringify","setItem","getAll","App","Todo_Todo","write","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b1eb9748.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class CustomCheckBox extends Component<any, any> {\r\n    uniqueId: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.uniqueId = \"Ch\" + Math.random();\r\n    }\r\n\r\n    onChanged(state) {\r\n        this.props.onChanged && this.props.onChanged(state);\r\n    }\r\n\r\n    render() {\r\n        let { checked } = this.props;\r\n        return <span className=\"customCheckbox\">\r\n            <input id={this.uniqueId} type=\"checkbox\" checked={checked}\r\n                onChange={(e) => { this.onChanged(e.currentTarget.checked) }} />\r\n            <label htmlFor={this.uniqueId}></label>\r\n        </span>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { CustomCheckBox } from './CustomCheckBox';\r\n\r\nexport class TodoItem extends Component<any, any>{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: this.props.item\r\n        };\r\n    }\r\n\r\n    private updateStore(newState) {\r\n        this.setState(newState);\r\n        this.props.updateStore && this.props.updateStore();\r\n    }\r\n    render() {\r\n        let { item } = this.state;\r\n        return (\r\n            <div className=\"todoItem\">\r\n                <CustomCheckBox checked={item.done} onChanged={(state) => {\r\n                    let newState = state;\r\n                    Object.assign(this.state.item, { done: newState });\r\n                    this.updateStore(this.state.item);\r\n                }} />\r\n\r\n                <input className={\"TodoTitle\" + (item.done ? \" done\" : \"\")} type=\"text\" value={item.title} onChange={(e) => {\r\n                    let newState = e.currentTarget.value;\r\n                    Object.assign(this.state.item, { title: newState });\r\n                    this.updateStore(this.state.item);\r\n\r\n                }} />\r\n                <span className=\"button\"\r\n                    onClick={\r\n                        () => {\r\n                            this.props.deleteItem && this.props.deleteItem(item);\r\n                        }\r\n                    }\r\n                >&#x2716;</span>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { TodoItem } from './TodoItem';\r\n\r\nexport class TodoList extends Component<any, any>{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { data: this.props.data }\r\n    }\r\n\r\n    deleteItem(item) {\r\n        let ind = this.state.data.indexOf(item);\r\n        if (ind > -1) {\r\n            this.state.data.splice(ind, 1);\r\n            this.setState({ data: this.state.data });\r\n            this.props.updateStore && this.props.updateStore();\r\n        }\r\n    }\r\n\r\n    updateStore() {\r\n        this.props.updateStore && this.props.updateStore();\r\n    }\r\n\r\n    render() {\r\n        let data = this.state.data;\r\n        return (\r\n            <div>\r\n                {data.map((item, index) => <TodoItem updateStore={this.updateStore.bind(this)} key={item.id} deleteItem={this.deleteItem.bind(this)} item={item} />)}\r\n            </div>\r\n        );\r\n    }\r\n}","export class TodoModel {\r\n    id: number;\r\n    title: string;\r\n    done: boolean = false;\r\n    constructor(title: string) {\r\n        this.title = title;\r\n        this.id = Math.random();\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { TodoModel } from '../Models/TodoModel';\r\n\r\nexport class TodoEntry extends Component<any, any>{\r\n    render() {\r\n        return (\r\n            <div className=\"todoEntry\" >\r\n                <div>\r\n                    <input ref=\"inp\" type=\"text\" placeholder={\"Add new item\"} />\r\n                    <span className=\"button\"\r\n                        onClick={\r\n                            () => {\r\n                                let val = (this.refs.inp as any).value || \"new item \";\r\n                                let newItem = new TodoModel(val);\r\n                                (this.refs.inp as any).value = \"\";\r\n                                this.props.onAdd && this.props.onAdd(newItem);\r\n                            }\r\n                        }>&#x271A;</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { TodoList } from \"./TodoList\";\r\nimport { TodoEntry } from \"./TodoEntry\";\r\n\r\nexport class Todo extends Component<any, any> {\r\n  render() {\r\n    return (\r\n      <div className=\"todoComponent\">\r\n        <TodoEntry\r\n          onAdd={item => {\r\n            this.props.data.push(item);\r\n            this.forceUpdate();\r\n            this.props.updateStore && this.props.updateStore();\r\n          }}\r\n        />\r\n        <hr />\r\n        <TodoList\r\n          updateStore={this.props.updateStore.bind(this)}\r\n          data={this.props.data}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Todo } from './Components/Todo';\r\nimport { TodoModel } from \"./Models/TodoModel\";\r\nimport { LocalStorageService } from \"./Services/LocalStorageService\";\r\n\r\nlet storage = new LocalStorageService(\"reactDemoWFM\");\r\nconst data = storage.getAll<TodoModel>();\r\nif (!data.length) {\r\n  data.push(new TodoModel(\"Add new items\"));\r\n}\r\n\r\nexport class App extends Component<any, any> {\r\n  render() {\r\n    return <Todo updateStore={() => { storage.write(data) }}  data={data}/>\r\n  }\r\n}","export class LocalStorageService {\r\n    private storage: any = {};\r\n    private storageKey: string;\r\n    constructor(storageKey: string) {\r\n        this.storageKey = storageKey;\r\n        let d = JSON.parse(localStorage.getItem(storageKey) || '{}');\r\n        this.storage = d;\r\n    }\r\n\r\n    public getAll<T>(): T[] {\r\n        let data = this.storage.data;\r\n        return ((data && data.length) ? data : []) as T[];\r\n    }\r\n\r\n    public write(data) {\r\n        let d = JSON.stringify({ data: data || [] });\r\n        localStorage.setItem(this.storageKey, d);\r\n    }\r\n}","import './index.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}